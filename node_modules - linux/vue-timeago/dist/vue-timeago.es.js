import toNow from 'date-fns/distance_in_words_to_now';

var createTimeago = function createTimeago() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var locales = opts.locales || {};
  var name = opts.name || 'Timeago';
  return {
    name: name,
    props: {
      since: {
        required: true
      },
      title: {
        type: [String, Boolean]
      },
      locale: {
        type: String
      },
      autoUpdate: {
        type: Number
      },
      includeSeconds: {
        type: Boolean
      }
    },
    data: function data() {
      return {
        timeago: this.convert(this.since)
      };
    },
    mounted: function mounted() {
      this.startUpdater();
    },
    beforeDestroy: function beforeDestroy() {
      this.stopUpdater();
    },
    render: function render(h) {
      return h('time', {
        attrs: {
          datetime: new Date(this.since),
          title: typeof this.title === 'string' ? this.title : this.title === false ? null : this.timeago
        }
      }, [this.timeago]);
    },
    methods: {
      convert: function convert(date) {
        return toNow(date, {
          addSuffix: true,
          locale: locales[this.locale || opts.locale],
          includeSeconds: this.includeSeconds
        });
      },
      startUpdater: function startUpdater() {
        var _this = this;

        if (this.autoUpdate) {
          this.updater = setInterval(function () {
            _this.timeago = _this.convert(_this.since);
          }, this.autoUpdate * 1000);
        }
      },
      stopUpdater: function stopUpdater() {
        if (this.updater) {
          clearInterval(this.updater);
          this.updater = null;
        }
      }
    },
    watch: {
      autoUpdate: function autoUpdate(newValue) {
        this.stopUpdater();

        if (newValue) {
          this.startUpdater();
        }
      },
      since: function since(newValue) {
        this.timeago = this.convert(newValue);
      }
    }
  };
};
var install = function install(Vue, opts) {
  var Component = createTimeago(opts);
  Vue.component(Component.name, Component);
};

export default install;
export { createTimeago, install };
